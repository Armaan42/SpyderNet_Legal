FORGE(1)                    User Commands                   FORGE(1)

NAME
       forge - Generate wordlists with custom lengths, characters, and patterns

SYNOPSIS
       python3 forge.py min max [charset] [options]

DESCRIPTION
       forge is a Python tool that creates lists of words (wordlists) based on
       rules you set. You can choose how long the words are, which letters,
       numbers, or symbols to use, and even specific patterns (like "abc123").
       The wordlist is saved to a file or shown on your screen. It’s great for
       making lists for testing passwords or other tasks.

       The tool only outputs the wordlist—no extra messages.

ARGUMENTS
       min    The shortest word length (e.g., 3 for 3-letter words).
              Must be a number (1 or higher).

       max    The longest word length (e.g., 4 for up to 4-letter words).
              Must be a number, equal to or greater than min.

       charset
              The characters to use for the wordlist (e.g., "abc" for just
              a, b, c). If you don’t specify this, it uses all lowercase
              letters (a-z). You can use any letters, numbers, or symbols.

OPTIONS
       -o filename, --output filename
              Save the wordlist to a file (e.g., "words.txt"). If not used,
              the wordlist is shown on your screen.

       -t pattern, --pattern pattern
              Create words following a pattern. Use these special characters:
              @ = any lowercase letter (or your charset).
              , = any uppercase letter (A-Z or custom).
              % = any number (0-9 or custom).
              ^ = any symbol (like !@#$ or custom).
              Example: "-t @@123" makes words like "ab123", "cd123".

       -s startword, --start startword
              Start the wordlist from a specific word (e.g., "-s bbb" skips
              earlier words like "aaa"). Must match the length of min.

       -e endword, --end endword
              Stop the wordlist at a specific word (e.g., "-e ccc"). Must
              match the length of max.

       -l literal, --literal literal
              Treat special pattern characters (@, ,, %, ^) as normal letters.
              Example: "-t @@ -l @@" makes words starting with "@@". Must be
              the same length as the pattern.

       -p word1 [word2 ...], --permute word1 [word2 ...]
              Mix words in all possible orders. Example: "-p cat dog" makes
              "catdog", "dogcat". You can also use one word (e.g., "-p abc"
              to mix letters a, b, c).

       --upper charset
              Set custom uppercase letters (default: A-Z). Example: "--upper ABC".

       --numbers charset
              Set custom numbers (default: 0-9). Example: "--numbers 012".

       --symbols charset
              Set custom symbols (default: !@#$%^&*...).
              Example: "--symbols !@#".

EXAMPLES
       Generate all 3-letter words using a, b, c, shown on screen:
              python3 forge.py 3 3 abc
              Output:
              aaa
              aab
              aac
              ...

       Save 3-letter words using a, b, c to a file:
              python3 forge.py 3 3 abc -o mylist.txt
              Creates mylist.txt with:
              aaa
              aab
              aac
              ...

       Make 5-letter words with 2 letters then "dog":
              python3 forge.py 5 5 -t @@dog
              Output:
              aadog
              abdog
              acdog
              ...

       Mix the words "cat" and "dog" in all orders:
              python3 forge.py 1 1 -p cat dog
              Output:
              catdog
              dogcat

       Start a wordlist from "bbb" and save to a file:
              python3 forge.py 3 3 abc -s bbb -o startlist.txt
              Creates startlist.txt with:
              bbb
              bbc
              bca
              ...

       Make 4-letter words with 2 letters and 2 numbers (0-1):
              python3 forge.py 4 4 -t @@%% --numbers 01
              Output:
              aa00
              aa01
              ab00
              ...

NOTES
       - Start with small wordlists (e.g., min/max 1-3, few characters) to
         avoid long run times or huge files.
       - If you use -o, the file is created in the same folder as forge.py.
       - Press Ctrl+C to stop the script if it’s taking too long.
       - The pattern length (-t) must match min and max.
       - Use --help to see all options:
              python3 forge.py --help

BUGS
       If you get errors like "ValueError", check your arguments:
       - min must be <= max.
       - start/end words must match min/max lengths.
       - pattern and literal must be the same length.

AUTHOR
       Generated by Grok, created by xAI.

SEE ALSO
       python3(1)

FORGE 1.0                  May 2025                      FORGE(1)